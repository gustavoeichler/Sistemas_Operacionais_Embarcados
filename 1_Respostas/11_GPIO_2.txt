1-Escreva um código em C para gerar uma onda quadrada de 1 Hz em um pino GPIO do Raspberry Pi.
	R: 
#include <wiringPi.h>
#include <unistd.h>


int main(){
	
	int pin = 7;	
	if(wiringPiSetup()== -1)
		return -1;

	while(1){
	pinMode(pin, OUTPUT);
	digitalWrite(pin, LOW);
	usleep(500000);
	digitalWrite(pin, HIGH);
	usleep(500000);
	}

	return 0;

s
2-Generalize o código acima para qualquer frequência possível.
	R:
int main(){
	
	int pin = 7;	//pino 7  na wiringPi é o GPIO4
	float f = 0, t = 0;
	if(wiringPiSetup()== -1)
		return -1;
	printf("Escolha uma frequência:\n");
	scanf("%f", &f);

	t = 1000000*(1/(2*f));

	while(1){
		pinMode(pin, OUTPUT);
		digitalWrite(pin, LOW);
		usleep(t);
		digitalWrite(pin, HIGH);
		usleep(t);
	}

	return 0;
}

3-Crie dois processos, e faça com que o processo-filho gere uma onda quadrada, enquanto o processo-pai lê um botão no GPIO, aumentando a frequência da onda sempre que o botão for pressionado. A frequência da onda quadrada deve começar em 1 Hz, e dobrar cada vez que o botão for pressionado. A frequência máxima é de 64 Hz, devendo retornar a 1 Hz se o botão for pressionado novamente.